// –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –º–µ–Ω—é
const toggle = document.getElementById('mobileToggle');
const navMenu = document.getElementById('navMenu');

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —è–∑—ã–∫–∞
let currentLanguage = 'ua';

// –§—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é
function closeMobileMenu() {
  toggle.classList.remove('active');
  navMenu.classList.remove('active');
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ/–∑–∞–∫—Ä—ã—Ç–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é –ø–æ –∫–ª–∏–∫—É –Ω–∞ –±—É—Ä–≥–µ—Ä
toggle?.addEventListener('click', () => {
  toggle.classList.toggle('active');
  navMenu.classList.toggle('active');
});

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —è–∑—ã–∫–∞
function switchLanguage(lang) {
  const dropdown = document.getElementById('languageDropdown');
  const currentLangEl = document.getElementById('currentLang');
  
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–≥–æ —è–∑—ã–∫–∞
  if (currentLangEl) {
    currentLangEl.textContent = lang === 'ua' ? 'üá∫üá¶ UA' : 'üá∑üá∫ RU';
  }
  
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏ –≤ —Å–ø–∏—Å–∫–µ
  if (dropdown) {
    const options = dropdown.querySelectorAll('.language-option');
    options.forEach(option => {
      option.classList.remove('active');
      if ((lang === 'ua' && option.textContent.includes('–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞')) ||
          (lang === 'ru' && option.textContent.includes('–†—É—Å—Å–∫–∏–π'))) {
        option.classList.add('active');
      }
    });
    dropdown.classList.remove('show'); // –∑–∞–∫—Ä—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —è–∑—ã–∫–æ–≤
  }
  
  currentLanguage = lang;
  if (lang === 'ru') {
    window.location.href = 'index-Ru.html';
    return;
  }
  if (lang === 'ua') {
    window.location.href = 'index (3) (1).html';
    return;
  }
  translatePage(lang);
  closeMobileMenu(); // –∑–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é
}

// –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø–µ—Ä–µ–≤–æ–¥–∞
function translatePage(lang) {
  const elements = document.querySelectorAll('[data-translate]');
  elements.forEach(element => {
    const key = element.getAttribute('data-translate');
    if (translations[lang]?.[key]) {
      element.textContent = translations[lang][key];
    }
  });
}

// –ü–æ–∫–∞–∑/—Å–∫—Ä—ã—Ç–∏–µ –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –º–µ–Ω—é —è–∑—ã–∫–æ–≤
function toggleLanguageDropdown() {
  const dropdown = document.getElementById('languageDropdown');
  dropdown?.classList.toggle('show');
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ —è–∑—ã–∫–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –Ω–µ–≥–æ
document.addEventListener('click', function(event) {
  const languageSwitcher = document.querySelector('.language-switcher');
  const dropdown = document.getElementById('languageDropdown');
  if (languageSwitcher && dropdown && !languageSwitcher.contains(event.target)) {
    dropdown.classList.remove('show');
  }
});

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –ø—É–Ω–∫—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
document.querySelectorAll('.nav-link').forEach(link => {
  link.addEventListener('click', () => {
    closeMobileMenu();
  });
});

        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
        function animateOnScroll() {
            const elements = document.querySelectorAll('.animate-on-scroll');
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add('visible');
                    }
                });
            }, { threshold: 0.1 });

            elements.forEach(element => {
                observer.observe(element);
            });
        }

        // –ü–ª–∞–≤–Ω—ã–π —Å–∫—Ä–æ–ª–ª –∫ —è–∫–æ—Ä—è–º
        function smoothScroll() {
            const links = document.querySelectorAll('a[href^="#"]');
            links.forEach(link => {
                link.addEventListener('click', function(e) {
                    e.preventDefault();
                    const target = document.querySelector(this.getAttribute('href'));
                    if (target) {
                        target.scrollIntoView({
                            behavior: 'smooth',
                            block: 'start'
                        });
                    }
                });
            });
        }

        /// –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç–∏–ø–æ–≤ —É—Å–ª—É–≥ –∫ –∫–∞—Ä—Ç–æ—á–∫–∞–º –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
        const serviceCardMap = {
            'general': 0,      // –ì–µ–Ω–µ—Ä–∞–ª—å–Ω–æ–µ —É–±–æ—Ä–∫–∞ - –ø–µ—Ä–≤–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞
            'furniture': 1,    // –•–∏–º—á–∏—Å—Ç–∫–∞ –º–µ–±–µ–ª–∏ - –≤—Ç–æ—Ä–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞  
            'renovation': 2,   // –£–±–æ—Ä–∫–∞ –ø–æ—Å–ª–µ —Ä–µ–º–æ–Ω—Ç–∞ - —Ç—Ä–µ—Ç—å—è –∫–∞—Ä—Ç–æ—á–∫–∞
            'office': 3,       // –£–±–æ—Ä–∫–∞ –æ—Ñ–∏—Å–æ–≤ - —á–µ—Ç–≤–µ—Ä—Ç–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞
            'maintenance': 4,  // –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∞—è —É–±–æ—Ä–∫–∞ - –ø—è—Ç–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞
            'windows': 5       // –ú—ã—Ç—å–µ –æ–∫–æ–Ω - —à–µ—Å—Ç–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞
        };
        // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —É—Å–ª—É–≥–∏
        function openServiceModal(serviceType) {
            const modal = document.getElementById('servicesModal');
            
            if (modal) {
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –∫–∞—Ä—Ç–æ—á–∫—É —É—Å–ª—É–≥–∏
                showSpecificServiceCard(serviceType);
                
                // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
                modal.style.display = 'block';
                document.body.style.overflow = 'hidden';
                
                // –î–æ–±–∞–≤–ª—è–µ–º –ø–ª–∞–≤–Ω–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ
                setTimeout(() => {
                    modal.style.opacity = '1';
                }, 10);
            }
        }

        // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ (–û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)
        function openModal() {
            const modal = document.getElementById('servicesModal');
            modal.style.display = 'block';
            document.body.style.overflow = 'hidden';
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –ø—Ä–∏ –æ–±—ã—á–Ω–æ–º –æ—Ç–∫—Ä—ã—Ç–∏–∏
            showAllServiceCards();
            
            // –î–æ–±–∞–≤–ª—è–µ–º –ø–ª–∞–≤–Ω–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ
            setTimeout(() => {
                modal.style.opacity = '1';
            }, 10);
        }

        function closeModal() {
            const modal = document.getElementById('servicesModal');
            modal.style.opacity = '0';
            
            setTimeout(() => {
                modal.style.display = 'none';
                document.body.style.overflow = 'auto';
            }, 300);
        }

        // –ü–æ–∫–∞–∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏ —É—Å–ª—É–≥–∏
        function showSpecificServiceCard(serviceType) {
            const allCards = document.querySelectorAll('.modal-service-card');
            const cardIndex = serviceCardMap[serviceType];
            
            // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏
            allCards.forEach((card, index) => {
                if (index === cardIndex) {
                    card.style.display = 'flex';
                    card.style.maxWidth = '600px';
                    card.style.width = '100%';
                } else {
                    card.style.display = 'none';
                }
            });
            
            // –ò–∑–º–µ–Ω—è–µ–º —Å—Ç–∏–ª—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –æ–¥–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏
            const servicesRow = document.querySelector('.modal-services-row');
            if (servicesRow) {
                servicesRow.style.justifyContent = 'center';
                servicesRow.classList.add('single-card');
            }
        }

        // –ü–æ–∫–∞–∑ –≤—Å–µ—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ —É—Å–ª—É–≥ (–¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –æ—Ç–∫—Ä—ã—Ç–∏—è)
        function showAllServiceCards() {
            const allCards = document.querySelectorAll('.modal-service-card');
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏
            allCards.forEach(card => {
                card.style.display = 'flex';
                card.style.maxWidth = '480px';
                card.style.width = 'auto';
            });
            
            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ã—á–Ω—ã–π —Å—Ç–∏–ª—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
            const servicesRow = document.querySelector('.modal-services-row');
            if (servicesRow) {
                servicesRow.style.justifyContent = 'center';
                servicesRow.classList.remove('single-card');
            }
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã —Å –æ—Ç–ø—Ä–∞–≤–∫–æ–π –≤ Telegram
document.getElementById('cleaningForm').addEventListener('submit', function(e) {
    e.preventDefault();
    
    const formData = new FormData(this);
    const data = {};
    formData.forEach((value, key) => {
        data[key] = value;
    });
    
    sendToTelegram(data);
});

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
async function sendToTelegram(formData) {
    // –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –í–ê–®–ò –î–ê–ù–ù–´–ï:
    const BOT_TOKEN = '7194194086:AAGrFIAPKYi9hn_O2a9Mv5aPHYKhBfcEyuY'; // –í–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
    const CHAT_ID = '-1002876520194';     // –í–∞—à chat ID
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    let message = `üßπ <b>–ù–û–í–ê –ó–ê–Ø–í–ö–ê –ù–ê –ü–†–ò–ë–ò–†–ê–ù–ù–Ø</b>\n\n`;
    
    if (formData.name) message += `üë§ <b>–Ü–º'—è:</b> ${formData.name}\n`;
    if (formData.phone) message += `üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${formData.phone}\n`;
    if (formData.service) message += `üõ† <b>–ü–æ—Å–ª—É–≥–∞:</b> ${formData.service}\n`;
    if (formData.address) message += `üìç <b>–ê–¥—Ä–µ—Å–∞:</b> ${formData.address}\n`;
    if (formData.area) message += `üìè <b>–ü–ª–æ—â–∞:</b> ${formData.area} –º¬≤\n`;
    if (formData.date) message += `üìÖ <b>–î–∞—Ç–∞:</b> ${formData.date}\n`;
    if (formData.time) message += `üïê <b>–ß–∞—Å:</b> ${formData.time}\n`;
    if (formData.comments) message += `üí¨ <b>–ö–æ–º–µ–Ω—Ç–∞—Ä—ñ:</b> ${formData.comments}\n`;
    
    message += `\n‚è∞ <b>–ß–∞—Å –ø–æ–¥–∞—á—ñ –∑–∞—è–≤–∫–∏:</b> ${new Date().toLocaleString('uk-UA')}`;
    
    try {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –æ—Ç–ø—Ä–∞–≤–∫–∏
        const submitBtn = document.querySelector('.submit-btn');
        const originalText = submitBtn.textContent;
        submitBtn.textContent = '–í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ...';
        submitBtn.disabled = true;
        submitBtn.style.opacity = '0.7';
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ Telegram Bot API
        const response = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                chat_id: CHAT_ID,
                text: message,
                parse_mode: 'HTML'
            })
        });
        
        const result = await response.json();
        
        if (response.ok && result.ok) {
            // –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
            showSuccessMessage();
            document.getElementById('cleaningForm').reset();
        } else {
            throw new Error(result.description || '–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏');
        }
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', error);
        showErrorMessage();
    } finally {
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
        const submitBtn = document.querySelector('.submit-btn');
        submitBtn.textContent = originalText;
        submitBtn.disabled = false;
        submitBtn.style.opacity = '1';
    }
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
function showSuccessMessage() {
    // –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    const notification = document.createElement('div');
    notification.innerHTML = `
        <div style="
            position: fixed;
            top: 20px;
            right: 20px;
            background: linear-gradient(45deg, #4CAF50, #45a049);
            color: white;
            padding: 15px 20px;
            border-radius: 10px;
            box-shadow: 0 4px 20px rgba(76, 175, 80, 0.3);
            z-index: 10000;
            font-weight: bold;
            animation: slideIn 0.5s ease-out;
        ">
            ‚úÖ –î—è–∫—É—î–º–æ –∑–∞ –∑–∞—è–≤–∫—É!<br>
            <small>–ú–∏ –∑–≤'—è–∂–µ–º–æ—Å—è –∑ –≤–∞–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º</small>
        </div>
    `;
    
    document.body.appendChild(notification);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    const style = document.createElement('style');
    style.textContent = `
        @keyframes slideIn {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }
    `;
    document.head.appendChild(style);
    
    // –£–±–∏—Ä–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 4 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
        notification.remove();
    }, 4000);
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –æ—à–∏–±–∫–∏
function showErrorMessage() {
    const notification = document.createElement('div');
    notification.innerHTML = `
        <div style="
            position: fixed;
            top: 20px;
            right: 20px;
            background: linear-gradient(45deg, #f44336, #d32f2f);
            color: white;
            padding: 15px 20px;
            border-radius: 10px;
            box-shadow: 0 4px 20px rgba(244, 67, 54, 0.3);
            z-index: 10000;
            font-weight: bold;
            animation: slideIn 0.5s ease-out;
        ">
            ‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏<br>
            <small>–°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –∞–±–æ –∑–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É–π—Ç–µ –Ω–∞–º</small>
        </div>
    `;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
        notification.remove();
    }, 4000);
}


// ===== –ú–û–î–ê–õ–¨–ù–û–ï –û–ö–ù–û "–ü–†–û –ö–û–ú–ü–ê–ù–Ü–Æ" =====

function openAboutModal() {
    const modal = document.getElementById('aboutModal');
    if (modal) {
        modal.style.display = 'block';
        modal.classList.add('show');
        document.body.style.overflow = 'hidden';
        if (typeof closeMobileMenu === 'function') {
            closeMobileMenu();
        }
    }
}

function closeAboutModal() {
    const modal = document.getElementById('aboutModal');
    if (modal) {
        modal.classList.remove('show');
        setTimeout(() => {
            modal.style.display = 'none';
            document.body.style.overflow = 'auto';
        }, 300);
    }
}

function initAboutModal() {
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–π —Å—Å—ã–ª–∫–∏
    const aboutLink = document.querySelector('a[href="#about"]');
    if (aboutLink) {
        aboutLink.removeAttribute('onclick');
        aboutLink.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            openAboutModal();
        });
    }

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è
    const closeBtn = document.querySelector('#aboutModal .close-modal');
    if (closeBtn) {
        closeBtn.removeAttribute('onclick');
        closeBtn.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            closeAboutModal();
        });
    }

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    const modal = document.getElementById('aboutModal');
    if (modal) {
        modal.addEventListener('click', function(e) {
            if (e.target === modal) {
                closeAboutModal();
            }
        });

        const modalContent = modal.querySelector('.modal-content');
        if (modalContent) {
            modalContent.addEventListener('click', function(e) {
                e.stopPropagation();
            });
        }
    }

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ Escape
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            const modal = document.getElementById('aboutModal');
            if (modal && modal.style.display === 'block') {
                closeAboutModal();
            }
        }
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è About Modal
document.addEventListener('DOMContentLoaded', function() {
    setTimeout(initAboutModal, 100);
});
    

  
 // === –û–ë–ù–û–í–õ–ï–ù–ù–´–ô JAVASCRIPT –î–õ–Ø –ì–ê–õ–ï–†–ï–ò ===


let currentMediaIndex = 0;
let filteredItems = [];

// –î–∞–Ω–Ω—ã–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ (–≤–∞—à–∏ —Ñ–∞–π–ª—ã)
const galleryMedia = [
    { type: 'video', src: 'img/1.mp4' },
    { type: 'image', src: 'img/2.jpeg' },
    { type: 'video', src: 'img/3.mp4' },
    { type: 'video', src: 'img/4.mp4' },
    { type: 'video', src: 'img/5.mp4' },
    { type: 'video', src: 'img/6.mp4' },
    { type: 'video', src: 'img/7.mp4' }
];

function openGalleryModal() {
    document.getElementById('galleryModal').style.display = 'block';
    document.body.style.overflow = 'hidden';
    updateFilteredItems();
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≤–∏–¥–µ–æ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
    setTimeout(setupAllVideos, 100);
    if (typeof closeMobileMenu === 'function') {
        closeMobileMenu();
    }
}

function closeGalleryModal() {
    document.getElementById('galleryModal').style.display = 'none';
    document.body.style.overflow = 'auto';
    pauseAllVideos();
}

function filterGallery(category) {
    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –∫–Ω–æ–ø–∫—É
    document.querySelectorAll('.filter-btn').forEach(btn => {
        btn.classList.remove('active');
    });
    event.target.classList.add('active');
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
    const items = document.querySelectorAll('.gallery-item');
    items.forEach(item => {
        if (category === 'all' || item.dataset.category === category) {
            item.style.display = 'block';
        } else {
            item.style.display = 'none';
        }
    });
    
    updateFilteredItems();
}

function updateFilteredItems() {
    const visibleItems = document.querySelectorAll('.gallery-item[style*="block"], .gallery-item:not([style*="none"])');
    filteredItems = Array.from(visibleItems);
}

function openFullscreen(index) {
    currentMediaIndex = index;
    const media = galleryMedia[index];
    const fullscreenModal = document.getElementById('fullscreenModal');
    const fullscreenImage = document.getElementById('fullscreenImage');
    const fullscreenVideo = document.getElementById('fullscreenVideo');
    
    if (media.type === 'image') {
        fullscreenImage.src = media.src;
        fullscreenImage.style.display = 'block';
        fullscreenVideo.style.display = 'none';
        fullscreenVideo.pause();
    } else if (media.type === 'video') {
        fullscreenVideo.querySelector('source').src = media.src;
        fullscreenVideo.load();
        
        // –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∏–¥–µ–æ
        fullscreenVideo.muted = true;
        fullscreenVideo.style.display = 'block';
        fullscreenImage.style.display = 'none';
    }
    
    fullscreenModal.style.display = 'flex';
    document.body.style.overflow = 'hidden';
}

function closeFullscreen() {
    const fullscreenModal = document.getElementById('fullscreenModal');
    const fullscreenVideo = document.getElementById('fullscreenVideo');
    
    fullscreenModal.style.display = 'none';
    fullscreenVideo.pause();
    document.body.style.overflow = 'auto';
}

function nextMedia() {
    currentMediaIndex = (currentMediaIndex + 1) % galleryMedia.length;
    openFullscreen(currentMediaIndex);
}

function prevMedia() {
    currentMediaIndex = currentMediaIndex === 0 ? galleryMedia.length - 1 : currentMediaIndex - 1;
    openFullscreen(currentMediaIndex);
}

function playVideo(button) {
    const video = button.parentElement.querySelector('video');
    
    // –ü—Ä–æ—Å—Ç—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑ —Ç–æ—Ä–º–æ–∑–æ–≤
    video.muted = true;
    
    if (video.paused) {
        video.play().then(() => {
            button.textContent = '‚è∏';
            button.style.background = 'rgba(255, 255, 255, 0.7)';
        }).catch(error => {
            console.log('–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –≤–∏–¥–µ–æ:', error);
        });
    } else {
        video.pause();
        button.textContent = '‚ñ∂';
        button.style.background = 'rgba(255, 255, 255, 0.9)';
    }
}

function setupAllVideos() {
    const videos = document.querySelectorAll('.gallery-item video');
    videos.forEach(video => {
        // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        video.muted = true;
        video.preload = 'none'; // –ù–µ –∑–∞–≥—Ä—É–∂–∞–µ–º –≤–∏–¥–µ–æ –∑–∞—Ä–∞–Ω–µ–µ
        video.controls = false;
        
        // –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        video.addEventListener('loadeddata', function() {
            this.muted = true;
        }, { once: true });
        
        video.addEventListener('error', function() {
            console.log('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ:', this.src);
        }, { once: true });
    });
}

function pauseAllVideos() {
    const videos = document.querySelectorAll('video');
    videos.forEach(video => {
        video.pause();
        video.currentTime = 0;
        video.muted = true;
    });
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
    const playButtons = document.querySelectorAll('.video-play-btn');
    playButtons.forEach(button => {
        button.textContent = '‚ñ∂';
        button.style.background = 'rgba(255, 255, 255, 0.9)';
    });
}

// –û–±–Ω–æ–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ window.onclick
const originalWindowClick = window.onclick;
window.onclick = function(event) {
    // –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥ –¥–ª—è –¥—Ä—É–≥–∏—Ö –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    if (originalWindowClick) {
        originalWindowClick(event);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–ª—è –≥–∞–ª–µ—Ä–µ–∏
    const galleryModal = document.getElementById('galleryModal');
    const fullscreenModal = document.getElementById('fullscreenModal');
    
    if (event.target === galleryModal) {
        closeGalleryModal();
    }
    if (event.target === fullscreenModal) {
        closeFullscreen();
    }
}

// –î–æ–±–∞–≤–∏—Ç—å –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É keydown
document.addEventListener('keydown', function(e) {
    const fullscreenModal = document.getElementById('fullscreenModal');
    if (fullscreenModal && fullscreenModal.style.display === 'flex') {
        if (e.key === 'ArrowRight') nextMedia();
        if (e.key === 'ArrowLeft') prevMedia();
        if (e.key === 'Escape') closeFullscreen();
        if (e.key === ' ') {
            e.preventDefault();
            const video = fullscreenModal.querySelector('video[style*="block"]');
            if (video) {
                video.muted = true;
                if (video.paused) {
                    video.play();
                } else {
                    video.pause();
                }
            }
        }
    }
    
    const galleryModal = document.getElementById('galleryModal');
    if (galleryModal && galleryModal.style.display === 'block' && e.key === 'Escape') {
        closeGalleryModal();
    }
});

// –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', function() {
    updateFilteredItems();
    
    // –ê–≤—Ç–æ–ø–∞—É–∑–∞ –≤–∏–¥–µ–æ –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Ñ–æ–∫—É—Å–∞
    document.addEventListener('visibilitychange', function() {
        if (document.hidden) {
            pauseAllVideos();
        }
    });
    
    // –£–±–∏—Ä–∞–µ–º —Ç—è–∂–µ–ª—ã–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã –∏ observer'—ã –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏–¥–µ–æ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    updateFilteredItems();
    
    // –ê–≤—Ç–æ–ø–∞—É–∑—ã –≤–∏–¥–µ–æ –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Ñ–æ–∫—É—Å–∞
    document.addEventListener('visibilitychange', function() {
        if (document.hidden) {
            pauseAllVideos();
        }
    });
});
        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫–∞–∑–∞ —á–µ—Ä–µ–∑ WhatsApp
        function contactWhatsApp() {
            const name = document.getElementById('name').value;
            const phone = document.getElementById('phone').value;
            const service = document.getElementById('service').value;
            const address = document.getElementById('address').value;
            const area = document.getElementById('area').value;
            const date = document.getElementById('date').value;
            const time = document.getElementById('time').value;
            const comments = document.getElementById('comments').value;
            
            let message = `–ü—Ä–∏–≤—ñ—Ç! –•–æ—á—É –∑–∞–º–æ–≤–∏—Ç–∏ –ø—Ä–∏–±–∏—Ä–∞–Ω–Ω—è:\n\n`;
            if (name) message += `–Ü–º'—è: ${name}\n`;
            if (phone) message += `–¢–µ–ª–µ—Ñ–æ–Ω: ${phone}\n`;
            if (service) message += `–ü–æ—Å–ª—É–≥–∞: ${service}\n`;
            if (address) message += `–ê–¥—Ä–µ—Å–∞: ${address}\n`;
            if (area) message += `–ü–ª–æ—â–∞: ${area} –º¬≤\n`;
            if (date) message += `–î–∞—Ç–∞: ${date}\n`;
            if (time) message += `–ß–∞—Å: ${time}\n`;
            if (comments) message += `–ö–æ–º–µ–Ω—Ç–∞—Ä—ñ: ${comments}\n`;
            
            const whatsappUrl = `https://wa.me/+380937983888?text=${encodeURIComponent(message)}`;
            window.open(whatsappUrl, '_blank');
        }

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
        document.addEventListener('DOMContentLoaded', function() {
            animateOnScroll();
            smoothScroll();
            
            // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –¥–∞—Ç—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('date').setAttribute('min', today);
        });

        // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
        window.addEventListener('scroll', function() {
            const header = document.querySelector('.header');
            if (window.scrollY > 100) {
                header.style.background = 'rgba(13, 20, 33, 0.98)';
            } else {
                header.style.background = 'rgba(13, 20, 33, 0.95)';
            }
        });
